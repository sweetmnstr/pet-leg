version: '3'

networks:
  app-network:
    driver: bridge

services:
#  api:
#    build: .
#    ports:
#      - "8899:8899"
#    working_dir: "/app"
#    depends_on:
#      - db
#      - rabbitmq
#      - redis
#    links:
#      - db
#      - rabbitmq
#      - redis
#    environment:
#      REDIS_HOST: redis
#      POSTGRES_HOST: db
#      POSTGRES_PORT: 5432
#      POSTGRES_USER: lp-dev-user
#      POSTGRES_PASSWORD: lp-dev-user-password
#      POSTGRES_DB: postgres
#      RABBITMQ_URL: amqp://rabbit_user:rabbit_user_pass@rabbitmq:5672/
#    env_file:
#      - .env
#    networks:
#      - app-network
#    command: yarn start

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6380:6379'
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit_user
      - RABBITMQ_DEFAULT_PASS=rabbit_user_pass
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    container_name: "postgres"
    restart: always
    environment:
      - POSTGRES_PASSWORD=lp-dev-user-password
      - POSTGRES_USER=lp-dev-user
      - POSTGRES_DB=postgres
    healthcheck:
      test: >
        psql postgresql://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost/$${POSTGRES_DB} \
          --tuples-only \
          --command "select 'postgres is up';" \
        || exit 1
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - ./scripts/init-postgres-db.sh:/docker-entrypoint-initdb.d/init-database.sh
      - ./scripts/seed-db-objects.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./scripts/seed-test-data.sql:/docker-entrypoint-initdb.d/11-init.sql
    expose:
      - "5455"
    ports:
      - "5455:5432"
    networks:
      - app-network

  migration:
    build: .
    working_dir: "/app"
#    depends_on:
#      - api
#    links:
#      - api
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: lp-dev-user
      POSTGRES_PASSWORD: lp-dev-user-password
      POSTGRES_DB: postgres
    env_file:
      - .env
    networks:
      - app-network
    command: yarn migration:run